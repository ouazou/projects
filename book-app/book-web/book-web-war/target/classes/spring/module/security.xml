<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
                http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                http://www.springframework.org/schema/security
                http://www.springframework.org/schema/security/spring-security-3.2.xsd">

    <http auto-config="true" use-expressions="true">
        <intercept-url pattern="/protected/user/**" access="hasAnyRole('${cams.ui.read.group}', '${cams.ui.write.group}', '${cams.ui.admin.group}')"/>
        <intercept-url pattern="/protected/admin/**" access="hasRole('${cams.ui.admin.group}')"/>
        <form-login login-page="/index.html"
                    authentication-failure-url="/unauthorized.html"
                    login-processing-url="/protected/j_spring_security_check"
                    username-parameter="login"
                    password-parameter="password"
                    authentication-success-handler-ref="redirectRoleStrategy"
                    authentication-failure-handler-ref="logFaillureConnection"/>

        <logout delete-cookies="JSESSIONID" invalidate-session="true" logout-url="/protected/logout" />
    </http>

    <beans:bean id="logFaillureConnection" class="com.ypg.car.foundations.web.handler.LogAuthenticationFaillureHandler" />

    <beans:bean id="redirectRoleStrategy"
                class="com.ypg.car.foundations.web.handler.RoleBasedAuthenticationSuccessHandler">
        <beans:property name="roleUrlMap">
            <beans:map>
                <beans:entry key="${cams.ui.read.group}" value="/protected/user/"/>
                <beans:entry key="${cams.ui.write.group}" value="/protected/user/"/>
                <beans:entry key="${cams.ui.admin.group}" value="/protected/admin/choose.html"/>
            </beans:map>
        </beans:property>
        <beans:property name="unauthorizedUrl" value="/usernotauthorized.html" />
    </beans:bean>

    <authentication-manager erase-credentials="true">
        <authentication-provider ref="adAuthenticationProvider"></authentication-provider>
    </authentication-manager>

    <beans:bean id="adAuthenticationProvider"
                class="com.ypg.cams.ui.security.ldao.authentication.ad.ActiveDirectoryLdapAuthenticationProvider">
        <beans:constructor-arg value="${cams.ui.ldap.rootDn}" />
        <beans:constructor-arg value="${cams.ui.ldap.domain}" />
        <beans:constructor-arg value="${cams.ui.ldap.url}" />
    </beans:bean>

</beans:beans>